{"expireTime":9007200854949531000,"key":"gatsby-plugin-mdx-entire-payload-23cf12c7031a98e43417cc63aede2aca-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Color Mode Toggles","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":21,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":21,"offset":21},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create a button to toggle between light and dark ","position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":50,"offset":72},"indent":[]}},{"type":"link","title":null,"url":"/color-modes","children":[{"type":"text","value":"color modes","position":{"start":{"line":4,"column":51,"offset":73},"end":{"line":4,"column":62,"offset":84},"indent":[]}}],"position":{"start":{"line":4,"column":50,"offset":72},"end":{"line":4,"column":77,"offset":99},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":4,"column":77,"offset":99},"end":{"line":4,"column":78,"offset":100},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":78,"offset":100},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { jsx, useColorMode } from 'theme-ui'\n\nexport default props => {\n  const [ mode, setMode ] = useColorMode()\n\n  return (\n    <button\n      {...props}\n      onClick={e => {\n        const next = mode === 'dark' ? 'light' : 'dark'\n        setMode(next)\n      }}\n    />\n  )\n}","position":{"start":{"line":6,"column":1,"offset":102},"end":{"line":23,"column":4,"offset":406},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Cycling through multiple modes","position":{"start":{"line":25,"column":4,"offset":411},"end":{"line":25,"column":34,"offset":441},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":408},"end":{"line":25,"column":34,"offset":441},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create a button to cycle through multiple ","position":{"start":{"line":27,"column":1,"offset":443},"end":{"line":27,"column":43,"offset":485},"indent":[]}},{"type":"link","title":null,"url":"/color-modes","children":[{"type":"text","value":"color modes","position":{"start":{"line":27,"column":44,"offset":486},"end":{"line":27,"column":55,"offset":497},"indent":[]}}],"position":{"start":{"line":27,"column":43,"offset":485},"end":{"line":27,"column":70,"offset":512},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":27,"column":70,"offset":512},"end":{"line":27,"column":71,"offset":513},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":443},"end":{"line":27,"column":71,"offset":513},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { jsx, useColorMode } from 'theme-ui'\n\nconst modes = [\n  'light',\n  'dark',\n  'purple',\n  'pink',\n]\n\nexport default props => {\n  const [ mode, setMode ] = useColorMode()\n\n  return (\n    <button\n      {...props}\n      onClick={e => {\n        const index = modes.indexOf(mode)\n        const next = modes[(index + 1) % modes.length]\n        setMode(next)\n      }}\n    />\n  )\n}","position":{"start":{"line":29,"column":1,"offset":515},"end":{"line":54,"column":4,"offset":922},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Color Mode Toggles\"}","position":{"start":{"line":57,"column":1,"offset":925},"end":{"line":57,"column":59,"offset":983},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":57,"column":59,"offset":983}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Color Mode Toggles\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"color-mode-toggles\"\n    }}>{`Color Mode Toggles`}</h1>\n    <p>{`Create a button to toggle between light and dark `}<a parentName=\"p\" {...{\n        \"href\": \"/color-modes\"\n      }}>{`color modes`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { jsx, useColorMode } from 'theme-ui'\n\nexport default props => {\n  const [ mode, setMode ] = useColorMode()\n\n  return (\n    <button\n      {...props}\n      onClick={e => {\n        const next = mode === 'dark' ? 'light' : 'dark'\n        setMode(next)\n      }}\n    />\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"cycling-through-multiple-modes\"\n    }}>{`Cycling through multiple modes`}</h2>\n    <p>{`Create a button to cycle through multiple `}<a parentName=\"p\" {...{\n        \"href\": \"/color-modes\"\n      }}>{`color modes`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { jsx, useColorMode } from 'theme-ui'\n\nconst modes = [\n  'light',\n  'dark',\n  'purple',\n  'pink',\n]\n\nexport default props => {\n  const [ mode, setMode ] = useColorMode()\n\n  return (\n    <button\n      {...props}\n      onClick={e => {\n        const index = modes.indexOf(mode)\n        const next = modes[(index + 1) % modes.length]\n        setMode(next)\n      }}\n    />\n  )\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}