{"expireTime":9007200854949531000,"key":"gatsby-plugin-mdx-entire-payload-0e5545d8337e24b1219068e6a6c7d042-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Color Modes","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":14,"offset":15},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":14,"offset":15},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Color modes can be used to create a user-configurable ","position":{"start":{"line":5,"column":1,"offset":17},"end":{"line":5,"column":55,"offset":71},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dark mode","position":{"start":{"line":5,"column":56,"offset":72},"end":{"line":5,"column":65,"offset":81},"indent":[]}}],"position":{"start":{"line":5,"column":55,"offset":71},"end":{"line":5,"column":66,"offset":82},"indent":[]}},{"type":"text","value":" or any number of other color modes.","position":{"start":{"line":5,"column":66,"offset":82},"end":{"line":5,"column":102,"offset":118},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":17},"end":{"line":5,"column":102,"offset":118},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Defining colors","position":{"start":{"line":7,"column":4,"offset":123},"end":{"line":7,"column":19,"offset":138},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":120},"end":{"line":7,"column":19,"offset":138},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the ","position":{"start":{"line":9,"column":1,"offset":140},"end":{"line":9,"column":8,"offset":147},"indent":[]}},{"type":"inlineCode","value":"theme.colors","position":{"start":{"line":9,"column":8,"offset":147},"end":{"line":9,"column":22,"offset":161},"indent":[]}},{"type":"text","value":" object, add a nested ","position":{"start":{"line":9,"column":22,"offset":161},"end":{"line":9,"column":44,"offset":183},"indent":[]}},{"type":"inlineCode","value":"modes","position":{"start":{"line":9,"column":44,"offset":183},"end":{"line":9,"column":51,"offset":190},"indent":[]}},{"type":"text","value":" object that will contain keys for optional color modes.","position":{"start":{"line":9,"column":51,"offset":190},"end":{"line":9,"column":107,"offset":246},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":140},"end":{"line":9,"column":107,"offset":246},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// example theme colors\n{\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#07c',\n    modes: {\n      dark: {\n        text: '#fff',\n        background: '#000',\n        primary: '#0cf',\n      }\n    }\n  }\n}","position":{"start":{"line":11,"column":1,"offset":248},"end":{"line":27,"column":4,"offset":480},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The colors defined at the root of the ","position":{"start":{"line":29,"column":1,"offset":482},"end":{"line":29,"column":39,"offset":520},"indent":[]}},{"type":"inlineCode","value":"colors","position":{"start":{"line":29,"column":39,"offset":520},"end":{"line":29,"column":47,"offset":528},"indent":[]}},{"type":"text","value":" object will be accessible as ","position":{"start":{"line":29,"column":47,"offset":528},"end":{"line":29,"column":77,"offset":558},"indent":[]}},{"type":"inlineCode","value":"default","position":{"start":{"line":29,"column":77,"offset":558},"end":{"line":29,"column":86,"offset":567},"indent":[]}},{"type":"text","value":". All colors\nfound in ","position":{"start":{"line":29,"column":86,"offset":567},"end":{"line":30,"column":10,"offset":589},"indent":[1]}},{"type":"inlineCode","value":"colors.modes","position":{"start":{"line":30,"column":10,"offset":589},"end":{"line":30,"column":24,"offset":603},"indent":[]}},{"type":"text","value":" will be referenced by their key. The above example will have two modes: ","position":{"start":{"line":30,"column":24,"offset":603},"end":{"line":30,"column":97,"offset":676},"indent":[]}},{"type":"inlineCode","value":"default","position":{"start":{"line":30,"column":97,"offset":676},"end":{"line":30,"column":106,"offset":685},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":30,"column":106,"offset":685},"end":{"line":30,"column":111,"offset":690},"indent":[]}},{"type":"inlineCode","value":"dark","position":{"start":{"line":30,"column":111,"offset":690},"end":{"line":30,"column":117,"offset":696},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":30,"column":117,"offset":696},"end":{"line":30,"column":118,"offset":697},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":482},"end":{"line":30,"column":118,"offset":697},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Setting the color mode","position":{"start":{"line":32,"column":4,"offset":702},"end":{"line":32,"column":26,"offset":724},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":699},"end":{"line":32,"column":26,"offset":724},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":34,"column":1,"offset":726},"end":{"line":34,"column":9,"offset":734},"indent":[]}},{"type":"inlineCode","value":"useColorMode","position":{"start":{"line":34,"column":9,"offset":734},"end":{"line":34,"column":23,"offset":748},"indent":[]}},{"type":"text","value":" hook in your application to change the color mode.\nThis value will be stored in ","position":{"start":{"line":34,"column":23,"offset":748},"end":{"line":35,"column":30,"offset":829},"indent":[1]}},{"type":"inlineCode","value":"localStorage","position":{"start":{"line":35,"column":30,"offset":829},"end":{"line":35,"column":44,"offset":843},"indent":[]}},{"type":"text","value":" and used whenever the page is loaded.","position":{"start":{"line":35,"column":44,"offset":843},"end":{"line":35,"column":82,"offset":881},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":726},"end":{"line":35,"column":82,"offset":881},"indent":[1]}},{"type":"code","lang":"jsx","meta":null,"value":"import React from 'react'\nimport { useColorMode } from 'theme-ui'\n\nexport default props => {\n  const [colorMode, setColorMode] = useColorMode()\n  return (\n    <header>\n      <button\n        onClick={e => {\n          setColorMode(colorMode === 'default' ? 'dark' : 'default')\n        }}>\n        Toggle {colorMode === 'default' ? 'Dark' : 'Light'}\n      </button>\n    </header>\n  )\n}","position":{"start":{"line":37,"column":1,"offset":883},"end":{"line":54,"column":4,"offset":1276},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Applying colors","position":{"start":{"line":56,"column":4,"offset":1281},"end":{"line":56,"column":19,"offset":1296},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1278},"end":{"line":56,"column":19,"offset":1296},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ThemeProvider component will automatically apply color mode styles to the ","position":{"start":{"line":58,"column":1,"offset":1298},"end":{"line":58,"column":79,"offset":1376},"indent":[]}},{"type":"inlineCode","value":"<body>","position":{"start":{"line":58,"column":79,"offset":1376},"end":{"line":58,"column":87,"offset":1384},"indent":[]}},{"type":"text","value":" element.","position":{"start":{"line":58,"column":87,"offset":1384},"end":{"line":58,"column":96,"offset":1393},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1298},"end":{"line":58,"column":96,"offset":1393},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"import React from 'react'\nimport { ThemeProvider } from 'theme-ui'\nimport theme from './theme'\n\nexport default props => (\n  <ThemeProvider theme={theme}>\n    {props.children}\n  </ThemeProvider>\n)","position":{"start":{"line":60,"column":1,"offset":1395},"end":{"line":70,"column":4,"offset":1601},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To disable this behavior, add the ","position":{"start":{"line":72,"column":1,"offset":1603},"end":{"line":72,"column":35,"offset":1637},"indent":[]}},{"type":"inlineCode","value":"useBodyStyles: false","position":{"start":{"line":72,"column":35,"offset":1637},"end":{"line":72,"column":57,"offset":1659},"indent":[]}},{"type":"text","value":" flag to your theme.","position":{"start":{"line":72,"column":57,"offset":1659},"end":{"line":72,"column":77,"offset":1679},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1603},"end":{"line":72,"column":77,"offset":1679},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Gatsby plugin","position":{"start":{"line":74,"column":4,"offset":1684},"end":{"line":74,"column":17,"offset":1697},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1681},"end":{"line":74,"column":17,"offset":1697},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For use in a Gatsby site, install and use ","position":{"start":{"line":76,"column":1,"offset":1699},"end":{"line":76,"column":43,"offset":1741},"indent":[]}},{"type":"inlineCode","value":"gatsby-plugin-theme-ui","position":{"start":{"line":76,"column":43,"offset":1741},"end":{"line":76,"column":67,"offset":1765},"indent":[]}},{"type":"text","value":" to add the ThemeProvider to the root of your application.\nThe plugin will also help prevent the flash of colors that can happen during page load when a user has a non-default color mode set.","position":{"start":{"line":76,"column":67,"offset":1765},"end":{"line":77,"column":133,"offset":1956},"indent":[1]}}],"position":{"start":{"line":76,"column":1,"offset":1699},"end":{"line":77,"column":133,"offset":1956},"indent":[1]}},{"type":"code","lang":"sh","meta":null,"value":"npm i gatsby-plugin-theme-ui","position":{"start":{"line":79,"column":1,"offset":1958},"end":{"line":81,"column":4,"offset":1996},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This plugin will look for a ","position":{"start":{"line":83,"column":1,"offset":1998},"end":{"line":83,"column":29,"offset":2026},"indent":[]}},{"type":"inlineCode","value":"src/gatsby-plugin-theme-ui/index.js","position":{"start":{"line":83,"column":29,"offset":2026},"end":{"line":83,"column":66,"offset":2063},"indent":[]}},{"type":"text","value":" file to import and pass to the ThemeProvider.","position":{"start":{"line":83,"column":66,"offset":2063},"end":{"line":83,"column":112,"offset":2109},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1998},"end":{"line":83,"column":112,"offset":2109},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// gatsby-config.js\nmodule.exports = {\n  plugins: ['gatsby-plugin-theme-ui'],\n}","position":{"start":{"line":85,"column":1,"offset":2111},"end":{"line":90,"column":4,"offset":2200},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"See the ","position":{"start":{"line":92,"column":1,"offset":2202},"end":{"line":92,"column":9,"offset":2210},"indent":[]}},{"type":"link","title":null,"url":"/packages/gatsby-plugin","children":[{"type":"text","value":"Gatsby plugin docs","position":{"start":{"line":92,"column":10,"offset":2211},"end":{"line":92,"column":28,"offset":2229},"indent":[]}}],"position":{"start":{"line":92,"column":9,"offset":2210},"end":{"line":92,"column":54,"offset":2255},"indent":[]}},{"type":"text","value":" for more info.","position":{"start":{"line":92,"column":54,"offset":2255},"end":{"line":92,"column":69,"offset":2270},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2202},"end":{"line":92,"column":69,"offset":2270},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Advanced","position":{"start":{"line":94,"column":4,"offset":2275},"end":{"line":94,"column":12,"offset":2283},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2272},"end":{"line":94,"column":12,"offset":2283},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Theme UI includes a few advanced usage options for color modes.","position":{"start":{"line":96,"column":1,"offset":2285},"end":{"line":96,"column":64,"offset":2348},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2285},"end":{"line":96,"column":64,"offset":2348},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Turn off custom properties","position":{"start":{"line":98,"column":5,"offset":2354},"end":{"line":98,"column":31,"offset":2380},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":2350},"end":{"line":98,"column":31,"offset":2380},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Theme UI uses\n","position":{"start":{"line":100,"column":1,"offset":2382},"end":{"line":101,"column":1,"offset":2396},"indent":[1]}},{"type":"link","title":null,"url":"https://caniuse.com/#feat=css-variables","children":[{"type":"text","value":"CSS custom properties","position":{"start":{"line":101,"column":2,"offset":2397},"end":{"line":101,"column":23,"offset":2418},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2396},"end":{"line":101,"column":65,"offset":2460},"indent":[]}},{"type":"text","value":"\nunder the hood to help prevent the flash of color on load.\nIf you're targeting browsers that don't support custom properties you can turn off this setting.\nThis will cause the colors to flash on initial page load.","position":{"start":{"line":101,"column":65,"offset":2460},"end":{"line":104,"column":58,"offset":2674},"indent":[1,1,1]}}],"position":{"start":{"line":100,"column":1,"offset":2382},"end":{"line":104,"column":58,"offset":2674},"indent":[1,1,1,1]}},{"type":"code","lang":"js","meta":null,"value":"// example theme colors\n{\n  useCustomProperties: false,\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#07c',\n    modes: {\n      dark: {\n        text: '#fff',\n        background: '#000',\n        primary: '#0cf',\n      }\n    }\n  }\n}","position":{"start":{"line":106,"column":1,"offset":2676},"end":{"line":123,"column":4,"offset":2938},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Initialize mode with ","position":{"start":{"line":125,"column":5,"offset":2944},"end":{"line":125,"column":26,"offset":2965},"indent":[]}},{"type":"inlineCode","value":"prefers-color-scheme","position":{"start":{"line":125,"column":26,"offset":2965},"end":{"line":125,"column":48,"offset":2987},"indent":[]}},{"type":"text","value":" media query","position":{"start":{"line":125,"column":48,"offset":2987},"end":{"line":125,"column":60,"offset":2999},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":2940},"end":{"line":125,"column":60,"offset":2999},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To initialize a color mode based on the ","position":{"start":{"line":127,"column":1,"offset":3001},"end":{"line":127,"column":41,"offset":3041},"indent":[]}},{"type":"inlineCode","value":"prefers-color-scheme","position":{"start":{"line":127,"column":41,"offset":3041},"end":{"line":127,"column":63,"offset":3063},"indent":[]}},{"type":"text","value":" media query, add the ","position":{"start":{"line":127,"column":63,"offset":3063},"end":{"line":127,"column":85,"offset":3085},"indent":[]}},{"type":"inlineCode","value":"useColorSchemeMediaQuery","position":{"start":{"line":127,"column":85,"offset":3085},"end":{"line":127,"column":111,"offset":3111},"indent":[]}},{"type":"text","value":" flag to your theme.\nThis will set the initial color mode to ","position":{"start":{"line":127,"column":111,"offset":3111},"end":{"line":128,"column":41,"offset":3172},"indent":[1]}},{"type":"inlineCode","value":"dark","position":{"start":{"line":128,"column":41,"offset":3172},"end":{"line":128,"column":47,"offset":3178},"indent":[]}},{"type":"text","value":" when ","position":{"start":{"line":128,"column":47,"offset":3178},"end":{"line":128,"column":53,"offset":3184},"indent":[]}},{"type":"inlineCode","value":"@media (prefers-color-scheme: dark)","position":{"start":{"line":128,"column":53,"offset":3184},"end":{"line":128,"column":90,"offset":3221},"indent":[]}},{"type":"text","value":" matches,\nor ","position":{"start":{"line":128,"column":90,"offset":3221},"end":{"line":129,"column":4,"offset":3234},"indent":[1]}},{"type":"inlineCode","value":"light","position":{"start":{"line":129,"column":4,"offset":3234},"end":{"line":129,"column":11,"offset":3241},"indent":[]}},{"type":"text","value":" when ","position":{"start":{"line":129,"column":11,"offset":3241},"end":{"line":129,"column":17,"offset":3247},"indent":[]}},{"type":"inlineCode","value":"@media (prefers-color-scheme: light)","position":{"start":{"line":129,"column":17,"offset":3247},"end":{"line":129,"column":55,"offset":3285},"indent":[]}},{"type":"text","value":" matches.\nIf you do not have a color mode named ","position":{"start":{"line":129,"column":55,"offset":3285},"end":{"line":130,"column":39,"offset":3333},"indent":[1]}},{"type":"inlineCode","value":"dark","position":{"start":{"line":130,"column":39,"offset":3333},"end":{"line":130,"column":45,"offset":3339},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":130,"column":45,"offset":3339},"end":{"line":130,"column":49,"offset":3343},"indent":[]}},{"type":"inlineCode","value":"light","position":{"start":{"line":130,"column":49,"offset":3343},"end":{"line":130,"column":56,"offset":3350},"indent":[]}},{"type":"text","value":", this will have no effect.","position":{"start":{"line":130,"column":56,"offset":3350},"end":{"line":130,"column":83,"offset":3377},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3001},"end":{"line":130,"column":83,"offset":3377},"indent":[1,1,1]}},{"type":"code","lang":"js","meta":null,"value":"{\n  useColorSchemeMediaQuery: true,\n  colors: {\n    text: '#000',\n    background: '#fff',\n    modes: {\n      dark: {\n        text: '#fff',\n        background: '#000',\n      }\n    }\n  }\n}","position":{"start":{"line":132,"column":1,"offset":3379},"end":{"line":146,"column":4,"offset":3575},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Disable persisting color mode on ","position":{"start":{"line":148,"column":5,"offset":3581},"end":{"line":148,"column":38,"offset":3614},"indent":[]}},{"type":"inlineCode","value":"localStorage","position":{"start":{"line":148,"column":38,"offset":3614},"end":{"line":148,"column":52,"offset":3628},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":3577},"end":{"line":148,"column":52,"offset":3628},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To disable ","position":{"start":{"line":150,"column":1,"offset":3630},"end":{"line":150,"column":12,"offset":3641},"indent":[]}},{"type":"inlineCode","value":"localStorage","position":{"start":{"line":150,"column":12,"offset":3641},"end":{"line":150,"column":26,"offset":3655},"indent":[]}},{"type":"text","value":" add the ","position":{"start":{"line":150,"column":26,"offset":3655},"end":{"line":150,"column":35,"offset":3664},"indent":[]}},{"type":"inlineCode","value":"useLocalStorage: false","position":{"start":{"line":150,"column":35,"offset":3664},"end":{"line":150,"column":59,"offset":3688},"indent":[]}},{"type":"text","value":" flag to your theme.","position":{"start":{"line":150,"column":59,"offset":3688},"end":{"line":150,"column":79,"offset":3708},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":3630},"end":{"line":150,"column":79,"offset":3708},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"{\n  useLocalStorage: false,\n  colors: {\n    text: '#000',\n    background: '#fff',\n    modes: {\n      dark: {\n        text: '#fff',\n        background: '#000',\n      }\n    }\n  }\n}","position":{"start":{"line":152,"column":1,"offset":3710},"end":{"line":166,"column":4,"offset":3898},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Color Modes\"}","position":{"start":{"line":169,"column":1,"offset":3901},"end":{"line":169,"column":52,"offset":3952},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":169,"column":52,"offset":3952}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Color Modes\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"color-modes\"\n    }}>{`Color Modes`}</h1>\n    <p>{`Color modes can be used to create a user-configurable `}<em parentName=\"p\">{`dark mode`}</em>{` or any number of other color modes.`}</p>\n    <h2 {...{\n      \"id\": \"defining-colors\"\n    }}>{`Defining colors`}</h2>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`theme.colors`}</inlineCode>{` object, add a nested `}<inlineCode parentName=\"p\">{`modes`}</inlineCode>{` object that will contain keys for optional color modes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// example theme colors\n{\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#07c',\n    modes: {\n      dark: {\n        text: '#fff',\n        background: '#000',\n        primary: '#0cf',\n      }\n    }\n  }\n}\n`}</code></pre>\n    <p>{`The colors defined at the root of the `}<inlineCode parentName=\"p\">{`colors`}</inlineCode>{` object will be accessible as `}<inlineCode parentName=\"p\">{`default`}</inlineCode>{`. All colors\nfound in `}<inlineCode parentName=\"p\">{`colors.modes`}</inlineCode>{` will be referenced by their key. The above example will have two modes: `}<inlineCode parentName=\"p\">{`default`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`dark`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"setting-the-color-mode\"\n    }}>{`Setting the color mode`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`useColorMode`}</inlineCode>{` hook in your application to change the color mode.\nThis value will be stored in `}<inlineCode parentName=\"p\">{`localStorage`}</inlineCode>{` and used whenever the page is loaded.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react'\nimport { useColorMode } from 'theme-ui'\n\nexport default props => {\n  const [colorMode, setColorMode] = useColorMode()\n  return (\n    <header>\n      <button\n        onClick={e => {\n          setColorMode(colorMode === 'default' ? 'dark' : 'default')\n        }}>\n        Toggle {colorMode === 'default' ? 'Dark' : 'Light'}\n      </button>\n    </header>\n  )\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"applying-colors\"\n    }}>{`Applying colors`}</h2>\n    <p>{`The ThemeProvider component will automatically apply color mode styles to the `}<inlineCode parentName=\"p\">{`<body>`}</inlineCode>{` element.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react'\nimport { ThemeProvider } from 'theme-ui'\nimport theme from './theme'\n\nexport default props => (\n  <ThemeProvider theme={theme}>\n    {props.children}\n  </ThemeProvider>\n)\n`}</code></pre>\n    <p>{`To disable this behavior, add the `}<inlineCode parentName=\"p\">{`useBodyStyles: false`}</inlineCode>{` flag to your theme.`}</p>\n    <h2 {...{\n      \"id\": \"gatsby-plugin\"\n    }}>{`Gatsby plugin`}</h2>\n    <p>{`For use in a Gatsby site, install and use `}<inlineCode parentName=\"p\">{`gatsby-plugin-theme-ui`}</inlineCode>{` to add the ThemeProvider to the root of your application.\nThe plugin will also help prevent the flash of colors that can happen during page load when a user has a non-default color mode set.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`npm i gatsby-plugin-theme-ui\n`}</code></pre>\n    <p>{`This plugin will look for a `}<inlineCode parentName=\"p\">{`src/gatsby-plugin-theme-ui/index.js`}</inlineCode>{` file to import and pass to the ThemeProvider.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// gatsby-config.js\nmodule.exports = {\n  plugins: ['gatsby-plugin-theme-ui'],\n}\n`}</code></pre>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"/packages/gatsby-plugin\"\n      }}>{`Gatsby plugin docs`}</a>{` for more info.`}</p>\n    <h2 {...{\n      \"id\": \"advanced\"\n    }}>{`Advanced`}</h2>\n    <p>{`Theme UI includes a few advanced usage options for color modes.`}</p>\n    <h3 {...{\n      \"id\": \"turn-off-custom-properties\"\n    }}>{`Turn off custom properties`}</h3>\n    <p>{`Theme UI uses\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://caniuse.com/#feat=css-variables\"\n      }}>{`CSS custom properties`}</a>{`\nunder the hood to help prevent the flash of color on load.\nIf you're targeting browsers that don't support custom properties you can turn off this setting.\nThis will cause the colors to flash on initial page load.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// example theme colors\n{\n  useCustomProperties: false,\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#07c',\n    modes: {\n      dark: {\n        text: '#fff',\n        background: '#000',\n        primary: '#0cf',\n      }\n    }\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"initialize-mode-with-prefers-color-scheme-media-query\"\n    }}>{`Initialize mode with `}<inlineCode parentName=\"h3\">{`prefers-color-scheme`}</inlineCode>{` media query`}</h3>\n    <p>{`To initialize a color mode based on the `}<inlineCode parentName=\"p\">{`prefers-color-scheme`}</inlineCode>{` media query, add the `}<inlineCode parentName=\"p\">{`useColorSchemeMediaQuery`}</inlineCode>{` flag to your theme.\nThis will set the initial color mode to `}<inlineCode parentName=\"p\">{`dark`}</inlineCode>{` when `}<inlineCode parentName=\"p\">{`@media (prefers-color-scheme: dark)`}</inlineCode>{` matches,\nor `}<inlineCode parentName=\"p\">{`light`}</inlineCode>{` when `}<inlineCode parentName=\"p\">{`@media (prefers-color-scheme: light)`}</inlineCode>{` matches.\nIf you do not have a color mode named `}<inlineCode parentName=\"p\">{`dark`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`light`}</inlineCode>{`, this will have no effect.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  useColorSchemeMediaQuery: true,\n  colors: {\n    text: '#000',\n    background: '#fff',\n    modes: {\n      dark: {\n        text: '#fff',\n        background: '#000',\n      }\n    }\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"disable-persisting-color-mode-on-localstorage\"\n    }}>{`Disable persisting color mode on `}<inlineCode parentName=\"h3\">{`localStorage`}</inlineCode></h3>\n    <p>{`To disable `}<inlineCode parentName=\"p\">{`localStorage`}</inlineCode>{` add the `}<inlineCode parentName=\"p\">{`useLocalStorage: false`}</inlineCode>{` flag to your theme.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  useLocalStorage: false,\n  colors: {\n    text: '#000',\n    background: '#fff',\n    modes: {\n      dark: {\n        text: '#fff',\n        background: '#000',\n      }\n    }\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}