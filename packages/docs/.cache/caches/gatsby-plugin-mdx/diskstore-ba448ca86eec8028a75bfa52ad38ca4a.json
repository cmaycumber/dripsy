{"expireTime":9007200854949531000,"key":"gatsby-plugin-mdx-entire-payload-9b3c2932ff95a62627f98685a03565ce-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"How it Works","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":15,"offset":15},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":15,"offset":15},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Theme UI combines several libraries together to form a mini-framework for styling applications.","position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":4,"column":96,"offset":112},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":4,"column":96,"offset":112},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Theme UI is built with:","position":{"start":{"line":6,"column":1,"offset":114},"end":{"line":6,"column":24,"offset":137},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":114},"end":{"line":6,"column":24,"offset":137},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"emotion","label":"Emotion","referenceType":"collapsed","children":[{"type":"text","value":"Emotion","position":{"start":{"line":8,"column":4,"offset":142},"end":{"line":8,"column":11,"offset":149},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":141},"end":{"line":8,"column":14,"offset":152},"indent":[]}},{"type":"text","value":": used to generate isolated CSS with theming context","position":{"start":{"line":8,"column":14,"offset":152},"end":{"line":8,"column":66,"offset":204},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":141},"end":{"line":8,"column":66,"offset":204},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":139},"end":{"line":8,"column":66,"offset":204},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"mdx","label":"MDX","referenceType":"collapsed","children":[{"type":"text","value":"MDX","position":{"start":{"line":9,"column":4,"offset":208},"end":{"line":9,"column":7,"offset":211},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":207},"end":{"line":9,"column":10,"offset":214},"indent":[]}},{"type":"text","value":": used to provide custom Emotion styled components to MDX documents, without polluting the global CSS scope","position":{"start":{"line":9,"column":10,"offset":214},"end":{"line":9,"column":117,"offset":321},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":207},"end":{"line":9,"column":117,"offset":321},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":205},"end":{"line":9,"column":117,"offset":321},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"typography.js","label":"Typography.js","referenceType":"collapsed","children":[{"type":"text","value":"Typography.js","position":{"start":{"line":10,"column":4,"offset":325},"end":{"line":10,"column":17,"offset":338},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":324},"end":{"line":10,"column":20,"offset":341},"indent":[]}},{"type":"text","value":": optionally used for creating rich typographic styles with a simple, high-level API","position":{"start":{"line":10,"column":20,"offset":341},"end":{"line":10,"column":104,"offset":425},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":324},"end":{"line":10,"column":104,"offset":425},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":322},"end":{"line":10,"column":104,"offset":425},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":139},"end":{"line":10,"column":104,"offset":425},"indent":[1,1]}},{"type":"definition","identifier":"emotion","label":"emotion","title":null,"url":"https://emotion.sh","position":{"start":{"line":12,"column":1,"offset":427},"end":{"line":12,"column":30,"offset":456},"indent":[]}},{"type":"definition","identifier":"mdx","label":"mdx","title":null,"url":"https://mdxjs.com","position":{"start":{"line":13,"column":1,"offset":457},"end":{"line":13,"column":25,"offset":481},"indent":[]}},{"type":"definition","identifier":"typography.js","label":"typography.js","title":null,"url":"https://github.com/KyleAMathews/typography.js","position":{"start":{"line":14,"column":1,"offset":482},"end":{"line":14,"column":63,"offset":544},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"ThemeProvider","position":{"start":{"line":16,"column":4,"offset":549},"end":{"line":16,"column":17,"offset":562},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":546},"end":{"line":16,"column":17,"offset":562},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Theme UI ","position":{"start":{"line":18,"column":1,"offset":564},"end":{"line":18,"column":14,"offset":577},"indent":[]}},{"type":"inlineCode","value":"ThemeProvider","position":{"start":{"line":18,"column":14,"offset":577},"end":{"line":18,"column":29,"offset":592},"indent":[]}},{"type":"text","value":" component is a wrapper around MDX's ","position":{"start":{"line":18,"column":29,"offset":592},"end":{"line":18,"column":66,"offset":629},"indent":[]}},{"type":"inlineCode","value":"MDXProvider","position":{"start":{"line":18,"column":66,"offset":629},"end":{"line":18,"column":79,"offset":642},"indent":[]}},{"type":"text","value":",\nwhich adds custom React components to context,\nand Emotion's ","position":{"start":{"line":18,"column":79,"offset":642},"end":{"line":20,"column":15,"offset":705},"indent":[1,1]}},{"type":"inlineCode","value":"ThemeProvider","position":{"start":{"line":20,"column":15,"offset":705},"end":{"line":20,"column":30,"offset":720},"indent":[]}},{"type":"text","value":", which adds the ","position":{"start":{"line":20,"column":30,"offset":720},"end":{"line":20,"column":47,"offset":737},"indent":[]}},{"type":"inlineCode","value":"theme","position":{"start":{"line":20,"column":47,"offset":737},"end":{"line":20,"column":54,"offset":744},"indent":[]}},{"type":"text","value":" object to context for use with Emotion.","position":{"start":{"line":20,"column":54,"offset":744},"end":{"line":20,"column":94,"offset":784},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":564},"end":{"line":20,"column":94,"offset":784},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The Theme UI ","position":{"start":{"line":22,"column":1,"offset":786},"end":{"line":22,"column":14,"offset":799},"indent":[]}},{"type":"inlineCode","value":"ThemeProvider","position":{"start":{"line":22,"column":14,"offset":799},"end":{"line":22,"column":29,"offset":814},"indent":[]}},{"type":"text","value":" includes a default ","position":{"start":{"line":22,"column":29,"offset":814},"end":{"line":22,"column":49,"offset":834},"indent":[]}},{"type":"inlineCode","value":"components","position":{"start":{"line":22,"column":49,"offset":834},"end":{"line":22,"column":61,"offset":846},"indent":[]}},{"type":"text","value":" object with styled components that pick up values from the ","position":{"start":{"line":22,"column":61,"offset":846},"end":{"line":22,"column":121,"offset":906},"indent":[]}},{"type":"inlineCode","value":"theme.styles","position":{"start":{"line":22,"column":121,"offset":906},"end":{"line":22,"column":135,"offset":920},"indent":[]}},{"type":"text","value":" object.\nFor example, ","position":{"start":{"line":22,"column":135,"offset":920},"end":{"line":23,"column":14,"offset":942},"indent":[1]}},{"type":"inlineCode","value":"theme.styles.h1","position":{"start":{"line":23,"column":14,"offset":942},"end":{"line":23,"column":31,"offset":959},"indent":[]}},{"type":"text","value":" will be used in its ","position":{"start":{"line":23,"column":31,"offset":959},"end":{"line":23,"column":52,"offset":980},"indent":[]}},{"type":"inlineCode","value":"components.h1","position":{"start":{"line":23,"column":52,"offset":980},"end":{"line":23,"column":67,"offset":995},"indent":[]}},{"type":"text","value":" component and rendered in MDX documents.","position":{"start":{"line":23,"column":67,"offset":995},"end":{"line":23,"column":108,"offset":1036},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":786},"end":{"line":23,"column":108,"offset":1036},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"For illustrative purposes, the ","position":{"start":{"line":25,"column":1,"offset":1038},"end":{"line":25,"column":32,"offset":1069},"indent":[]}},{"type":"inlineCode","value":"ThemeProvider","position":{"start":{"line":25,"column":32,"offset":1069},"end":{"line":25,"column":47,"offset":1084},"indent":[]}},{"type":"text","value":" renders something like the following:","position":{"start":{"line":25,"column":47,"offset":1084},"end":{"line":25,"column":85,"offset":1122},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1038},"end":{"line":25,"column":85,"offset":1122},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"// for demonstration only â€“ this does not reflect the actual source code\nimport React from 'react'\nimport { MDXProvider } from '@mdx-js/react'\nimport { ThemeProvider } from 'emotion-theming'\nimport styled from '@emotion/styled'\n\nconst themeUIComponents = {\n  h1: styled('h1')(props => props.theme.styles.h1),\n  h2: styled('h2')(props => props.theme.styles.h2),\n  // other MDX components\n}\n\nexport default ({ components, theme, children }) => (\n  <ThemeProvider theme={theme}>\n    <MDXProvider components={merge(themeUIComponents, components)}>\n      {children}\n    </MDXProvider>\n  </ThemeProvider>\n)","position":{"start":{"line":27,"column":1,"offset":1124},"end":{"line":47,"column":4,"offset":1735},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Custom Components","position":{"start":{"line":49,"column":4,"offset":1740},"end":{"line":49,"column":21,"offset":1757},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1737},"end":{"line":49,"column":21,"offset":1757},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When using the ","position":{"start":{"line":51,"column":1,"offset":1759},"end":{"line":51,"column":16,"offset":1774},"indent":[]}},{"type":"inlineCode","value":"components","position":{"start":{"line":51,"column":16,"offset":1774},"end":{"line":51,"column":28,"offset":1786},"indent":[]}},{"type":"text","value":" prop to add custom MDX components,\neach component is wrapped with the ","position":{"start":{"line":51,"column":28,"offset":1786},"end":{"line":52,"column":36,"offset":1857},"indent":[1]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":52,"column":36,"offset":1857},"end":{"line":52,"column":40,"offset":1861},"indent":[]}},{"type":"text","value":" prop to allow the component to pick up values from the ","position":{"start":{"line":52,"column":40,"offset":1861},"end":{"line":52,"column":96,"offset":1917},"indent":[]}},{"type":"inlineCode","value":"theme.styles","position":{"start":{"line":52,"column":96,"offset":1917},"end":{"line":52,"column":110,"offset":1931},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":52,"column":110,"offset":1931},"end":{"line":52,"column":118,"offset":1939},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1759},"end":{"line":52,"column":118,"offset":1939},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"JSX Pragma","position":{"start":{"line":54,"column":4,"offset":1944},"end":{"line":54,"column":14,"offset":1954},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1941},"end":{"line":54,"column":14,"offset":1954},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Theme UI JSX function wraps the Emotion JSX function, converting the ","position":{"start":{"line":56,"column":1,"offset":1956},"end":{"line":56,"column":74,"offset":2029},"indent":[]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":56,"column":74,"offset":2029},"end":{"line":56,"column":78,"offset":2033},"indent":[]}},{"type":"text","value":" prop to a call to ","position":{"start":{"line":56,"column":78,"offset":2033},"end":{"line":56,"column":97,"offset":2052},"indent":[]}},{"type":"inlineCode","value":"@theme-ui/css","position":{"start":{"line":56,"column":97,"offset":2052},"end":{"line":56,"column":112,"offset":2067},"indent":[]}},{"type":"text","value":".\nThe two examples below yield the same results:","position":{"start":{"line":56,"column":112,"offset":2067},"end":{"line":57,"column":47,"offset":2115},"indent":[1]}}],"position":{"start":{"line":56,"column":1,"offset":1956},"end":{"line":57,"column":47,"offset":2115},"indent":[1]}},{"type":"code","lang":"jsx","meta":null,"value":"// with Emotion's JSX function\n// this is typically handled with the Emotion Babel preset\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { css } from 'theme-ui'\n\nexport default props => (\n  <div\n    {...props}\n    css={css({\n      color: 'white',\n      bg: 'primary',\n      fontSize: 4,\n    })}\n  />\n)","position":{"start":{"line":59,"column":1,"offset":2117},"end":{"line":76,"column":4,"offset":2441},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"// with Theme UI's JSX function\n/** @jsx jsx */\nimport { jsx } from 'theme-ui'\n\nexport default props => (\n  <div\n    {...props}\n    sx={{\n      color: 'white',\n      bg: 'primary',\n      fontSize: 4,\n    }}\n  />\n)","position":{"start":{"line":78,"column":1,"offset":2443},"end":{"line":93,"column":4,"offset":2667},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"How it Works\"}","position":{"start":{"line":96,"column":1,"offset":2670},"end":{"line":96,"column":53,"offset":2722},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":96,"column":53,"offset":2722}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"How it Works\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How it Works`}</h1>\n    <p>{`Theme UI combines several libraries together to form a mini-framework for styling applications.`}</p>\n    <p>{`Theme UI is built with:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://emotion.sh\"\n        }}>{`Emotion`}</a>{`: used to generate isolated CSS with theming context`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://mdxjs.com\"\n        }}>{`MDX`}</a>{`: used to provide custom Emotion styled components to MDX documents, without polluting the global CSS scope`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/KyleAMathews/typography.js\"\n        }}>{`Typography.js`}</a>{`: optionally used for creating rich typographic styles with a simple, high-level API`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"themeprovider\"\n    }}>{`ThemeProvider`}</h2>\n    <p>{`The Theme UI `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` component is a wrapper around MDX's `}<inlineCode parentName=\"p\">{`MDXProvider`}</inlineCode>{`,\nwhich adds custom React components to context,\nand Emotion's `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{`, which adds the `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` object to context for use with Emotion.`}</p>\n    <p>{`The Theme UI `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` includes a default `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` object with styled components that pick up values from the `}<inlineCode parentName=\"p\">{`theme.styles`}</inlineCode>{` object.\nFor example, `}<inlineCode parentName=\"p\">{`theme.styles.h1`}</inlineCode>{` will be used in its `}<inlineCode parentName=\"p\">{`components.h1`}</inlineCode>{` component and rendered in MDX documents.`}</p>\n    <p>{`For illustrative purposes, the `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` renders something like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// for demonstration only â€“ this does not reflect the actual source code\nimport React from 'react'\nimport { MDXProvider } from '@mdx-js/react'\nimport { ThemeProvider } from 'emotion-theming'\nimport styled from '@emotion/styled'\n\nconst themeUIComponents = {\n  h1: styled('h1')(props => props.theme.styles.h1),\n  h2: styled('h2')(props => props.theme.styles.h2),\n  // other MDX components\n}\n\nexport default ({ components, theme, children }) => (\n  <ThemeProvider theme={theme}>\n    <MDXProvider components={merge(themeUIComponents, components)}>\n      {children}\n    </MDXProvider>\n  </ThemeProvider>\n)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"custom-components\"\n    }}>{`Custom Components`}</h2>\n    <p>{`When using the `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` prop to add custom MDX components,\neach component is wrapped with the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop to allow the component to pick up values from the `}<inlineCode parentName=\"p\">{`theme.styles`}</inlineCode>{` object.`}</p>\n    <h2 {...{\n      \"id\": \"jsx-pragma\"\n    }}>{`JSX Pragma`}</h2>\n    <p>{`The Theme UI JSX function wraps the Emotion JSX function, converting the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop to a call to `}<inlineCode parentName=\"p\">{`@theme-ui/css`}</inlineCode>{`.\nThe two examples below yield the same results:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// with Emotion's JSX function\n// this is typically handled with the Emotion Babel preset\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { css } from 'theme-ui'\n\nexport default props => (\n  <div\n    {...props}\n    css={css({\n      color: 'white',\n      bg: 'primary',\n      fontSize: 4,\n    })}\n  />\n)\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// with Theme UI's JSX function\n/** @jsx jsx */\nimport { jsx } from 'theme-ui'\n\nexport default props => (\n  <div\n    {...props}\n    sx={{\n      color: 'white',\n      bg: 'primary',\n      fontSize: 4,\n    }}\n  />\n)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}