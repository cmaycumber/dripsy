{"expireTime":9007200854949531000,"key":"gatsby-plugin-mdx-entire-payload-6d71dceada97c752b68164db74752b66-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Variants","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":11,"offset":11},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":11,"offset":11},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To add groups of styles based on theme values,\nyou can take advantage of the ","position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":5,"column":31,"offset":90},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"Variants","position":{"start":{"line":5,"column":32,"offset":91},"end":{"line":5,"column":40,"offset":99},"indent":[]}}],"position":{"start":{"line":5,"column":31,"offset":90},"end":{"line":5,"column":41,"offset":100},"indent":[]}},{"type":"text","value":" feature.\nVariants allow you to define the styles used across multiple buttons, typographic elements, or any element in your ","position":{"start":{"line":5,"column":41,"offset":100},"end":{"line":6,"column":116,"offset":225},"indent":[1]}},{"type":"inlineCode","value":"theme","position":{"start":{"line":6,"column":116,"offset":225},"end":{"line":6,"column":123,"offset":232},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":6,"column":123,"offset":232},"end":{"line":6,"column":131,"offset":240},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":6,"column":131,"offset":240},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For example, you can define ","position":{"start":{"line":8,"column":1,"offset":242},"end":{"line":8,"column":29,"offset":270},"indent":[]}},{"type":"inlineCode","value":"primary","position":{"start":{"line":8,"column":29,"offset":270},"end":{"line":8,"column":38,"offset":279},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":8,"column":38,"offset":279},"end":{"line":8,"column":43,"offset":284},"indent":[]}},{"type":"inlineCode","value":"secondary","position":{"start":{"line":8,"column":43,"offset":284},"end":{"line":8,"column":54,"offset":295},"indent":[]}},{"type":"text","value":" variants for buttons and use colors from the theme.","position":{"start":{"line":8,"column":54,"offset":295},"end":{"line":8,"column":106,"offset":347},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":242},"end":{"line":8,"column":106,"offset":347},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// example theme with variants\n{\n  colors: {\n    primary: '#07c',\n    secondary: '#639',\n  },\n  buttons: {\n    primary: {\n      color: 'white',\n      bg: 'primary',\n    },\n    secondary: {\n      color: 'white',\n      bg: 'secondary',\n    },\n  },\n}","position":{"start":{"line":10,"column":1,"offset":349},"end":{"line":28,"column":4,"offset":606},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With the ","position":{"start":{"line":30,"column":1,"offset":608},"end":{"line":30,"column":10,"offset":617},"indent":[]}},{"type":"inlineCode","value":"theme","position":{"start":{"line":30,"column":10,"offset":617},"end":{"line":30,"column":17,"offset":624},"indent":[]}},{"type":"text","value":" object above, the ","position":{"start":{"line":30,"column":17,"offset":624},"end":{"line":30,"column":36,"offset":643},"indent":[]}},{"type":"inlineCode","value":"buttons","position":{"start":{"line":30,"column":36,"offset":643},"end":{"line":30,"column":45,"offset":652},"indent":[]}},{"type":"text","value":" variants can be referenced in the ","position":{"start":{"line":30,"column":45,"offset":652},"end":{"line":30,"column":80,"offset":687},"indent":[]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":30,"column":80,"offset":687},"end":{"line":30,"column":84,"offset":691},"indent":[]}},{"type":"text","value":" prop.","position":{"start":{"line":30,"column":84,"offset":691},"end":{"line":30,"column":90,"offset":697},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":608},"end":{"line":30,"column":90,"offset":697},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"<button sx={{ variant: 'buttons.primary' }} />","position":{"start":{"line":32,"column":1,"offset":699},"end":{"line":34,"column":4,"offset":756},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When using the built-in ","position":{"start":{"line":36,"column":1,"offset":758},"end":{"line":36,"column":25,"offset":782},"indent":[]}},{"type":"link","title":null,"url":"/components/button","children":[{"type":"inlineCode","value":"Button","position":{"start":{"line":36,"column":26,"offset":783},"end":{"line":36,"column":34,"offset":791},"indent":[]}},{"type":"text","value":" component","position":{"start":{"line":36,"column":34,"offset":791},"end":{"line":36,"column":44,"offset":801},"indent":[]}}],"position":{"start":{"line":36,"column":25,"offset":782},"end":{"line":36,"column":65,"offset":822},"indent":[]}},{"type":"text","value":", you can set these styles with the ","position":{"start":{"line":36,"column":65,"offset":822},"end":{"line":36,"column":101,"offset":858},"indent":[]}},{"type":"inlineCode","value":"variant","position":{"start":{"line":36,"column":101,"offset":858},"end":{"line":36,"column":110,"offset":867},"indent":[]}},{"type":"text","value":" prop.","position":{"start":{"line":36,"column":110,"offset":867},"end":{"line":36,"column":116,"offset":873},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":758},"end":{"line":36,"column":116,"offset":873},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"<Button variant='secondary' />","position":{"start":{"line":38,"column":1,"offset":875},"end":{"line":40,"column":4,"offset":916},"indent":[1,1]}},{"type":"jsx","value":"<Note>","position":{"start":{"line":42,"column":1,"offset":918},"end":{"line":42,"column":7,"offset":924},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Variants can use any name you choose, and deeply nested objects can be accessed with dot notation.","position":{"start":{"line":44,"column":1,"offset":926},"end":{"line":44,"column":99,"offset":1024},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":926},"end":{"line":44,"column":99,"offset":1024},"indent":[]}},{"type":"jsx","value":"</Note>","position":{"start":{"line":46,"column":1,"offset":1026},"end":{"line":46,"column":8,"offset":1033},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Color Modes","position":{"start":{"line":48,"column":4,"offset":1038},"end":{"line":48,"column":15,"offset":1049},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1035},"end":{"line":48,"column":15,"offset":1049},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Variants will also work with ","position":{"start":{"line":50,"column":1,"offset":1051},"end":{"line":50,"column":30,"offset":1080},"indent":[]}},{"type":"link","title":null,"url":"/color-modes","children":[{"type":"text","value":"color modes","position":{"start":{"line":50,"column":31,"offset":1081},"end":{"line":50,"column":42,"offset":1092},"indent":[]}}],"position":{"start":{"line":50,"column":30,"offset":1080},"end":{"line":50,"column":57,"offset":1107},"indent":[]}},{"type":"text","value":".\nWith the example below, the primary button will adapt its colors based on the current color mode.","position":{"start":{"line":50,"column":57,"offset":1107},"end":{"line":51,"column":98,"offset":1206},"indent":[1]}}],"position":{"start":{"line":50,"column":1,"offset":1051},"end":{"line":51,"column":98,"offset":1206},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"// example theme with button variants and color modes\n{\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#0c7',\n    modes: {\n      dark: {\n        text: '#000',\n        background: '#fff',\n        primary: '#0c7',\n      },\n    },\n  },\n  buttons: {\n    primary: {\n      color: 'background', // use the page background color for an inverted effect\n      bg: 'primary',\n    },\n  }\n}","position":{"start":{"line":53,"column":1,"offset":1208},"end":{"line":75,"column":4,"offset":1616},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Typography","position":{"start":{"line":77,"column":4,"offset":1621},"end":{"line":77,"column":14,"offset":1631},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1618},"end":{"line":77,"column":14,"offset":1631},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Variants can also be used to create typographic styles,\nsimilar to how graphics applications store text styles.\nThis allows you to define core typographic values and use them as complete styles,\nbut still override individual values when needed.","position":{"start":{"line":79,"column":1,"offset":1633},"end":{"line":82,"column":50,"offset":1877},"indent":[1,1,1]}}],"position":{"start":{"line":79,"column":1,"offset":1633},"end":{"line":82,"column":50,"offset":1877},"indent":[1,1,1]}},{"type":"code","lang":"js","meta":null,"value":"// example theme with typographic variants\n{\n  fonts: {\n    body: 'system-ui, sans-serif',\n    heading: 'Poppins, sans-serif',\n    monospace: 'Menlo, monospace',\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n  fontWeights: {\n    body: 400,\n    heading: 900,\n    bold: 700,\n  },\n  letterSpacings: {\n    heading: '-0.05em',\n    caps: '0.1em',\n  },\n  text: {\n    heading: {\n      fontFamily: 'heading',\n      fontWeight: 'heading',\n      lineHeight: 'heading',\n      letterSpacing: 'heading',\n    },\n    display: {\n      fontFamily: 'heading',\n      fontWeight: 'heading',\n      lineHeight: 'heading',\n      letterSpacing: 'heading',\n      fontSize: [ 5, 6, 7 ],\n    },\n    caps: {\n      textTransform: 'uppercase',\n      letterSpacing: 'caps',\n    },\n  },\n}","position":{"start":{"line":84,"column":1,"offset":1879},"end":{"line":125,"column":4,"offset":2660},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"These variants can then be used in the ","position":{"start":{"line":127,"column":1,"offset":2662},"end":{"line":127,"column":40,"offset":2701},"indent":[]}},{"type":"inlineCode","value":"theme.styles","position":{"start":{"line":127,"column":40,"offset":2701},"end":{"line":127,"column":54,"offset":2715},"indent":[]}},{"type":"text","value":" object, with the ","position":{"start":{"line":127,"column":54,"offset":2715},"end":{"line":127,"column":72,"offset":2733},"indent":[]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":127,"column":72,"offset":2733},"end":{"line":127,"column":76,"offset":2737},"indent":[]}},{"type":"text","value":" prop, or with the\n","position":{"start":{"line":127,"column":76,"offset":2737},"end":{"line":128,"column":1,"offset":2756},"indent":[1]}},{"type":"link","title":null,"url":"/components/text","children":[{"type":"inlineCode","value":"Text","position":{"start":{"line":128,"column":2,"offset":2757},"end":{"line":128,"column":8,"offset":2763},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":2756},"end":{"line":128,"column":27,"offset":2782},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":128,"column":27,"offset":2782},"end":{"line":128,"column":31,"offset":2786},"indent":[]}},{"type":"link","title":null,"url":"/components/heading","children":[{"type":"inlineCode","value":"Heading","position":{"start":{"line":128,"column":32,"offset":2787},"end":{"line":128,"column":41,"offset":2796},"indent":[]}}],"position":{"start":{"line":128,"column":31,"offset":2786},"end":{"line":128,"column":63,"offset":2818},"indent":[]}},{"type":"text","value":" components.","position":{"start":{"line":128,"column":63,"offset":2818},"end":{"line":128,"column":75,"offset":2830},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":2662},"end":{"line":128,"column":75,"offset":2830},"indent":[1]}},{"type":"code","lang":"jsx","meta":null,"value":"// example usage of typographic variants\n<h1 sx={{ variant: 'text.display' }} />\n<p sx={{ variant: 'text.caps' }} />\n<h2\n  sx={{\n    variant: 'text.heading',\n    // overriding the default styles\n    fontWeight: 'body',\n  }}\n/>","position":{"start":{"line":130,"column":1,"offset":2832},"end":{"line":141,"column":4,"offset":3069},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Themeable Layout Components","position":{"start":{"line":143,"column":4,"offset":3074},"end":{"line":143,"column":31,"offset":3101},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":3071},"end":{"line":143,"column":31,"offset":3101},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Variants can also be used to create themeable layout components.\nThis is especially useful when creating ","position":{"start":{"line":145,"column":1,"offset":3103},"end":{"line":146,"column":41,"offset":3208},"indent":[1]}},{"type":"linkReference","identifier":"gatsby themes","label":"Gatsby themes","referenceType":"collapsed","children":[{"type":"text","value":"Gatsby themes","position":{"start":{"line":146,"column":42,"offset":3209},"end":{"line":146,"column":55,"offset":3222},"indent":[]}}],"position":{"start":{"line":146,"column":41,"offset":3208},"end":{"line":146,"column":58,"offset":3225},"indent":[]}},{"type":"text","value":",\nwhere you'd like certain parts of your page layout to be customizable.","position":{"start":{"line":146,"column":58,"offset":3225},"end":{"line":147,"column":71,"offset":3297},"indent":[1]}}],"position":{"start":{"line":145,"column":1,"offset":3103},"end":{"line":147,"column":71,"offset":3297},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using the ","position":{"start":{"line":149,"column":1,"offset":3299},"end":{"line":149,"column":11,"offset":3309},"indent":[]}},{"type":"inlineCode","value":"variant","position":{"start":{"line":149,"column":11,"offset":3309},"end":{"line":149,"column":20,"offset":3318},"indent":[]}},{"type":"text","value":" key in the ","position":{"start":{"line":149,"column":20,"offset":3318},"end":{"line":149,"column":32,"offset":3330},"indent":[]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":149,"column":32,"offset":3330},"end":{"line":149,"column":36,"offset":3334},"indent":[]}},{"type":"text","value":" prop allows you to define styles for a component that can optionally be overridden from the ","position":{"start":{"line":149,"column":36,"offset":3334},"end":{"line":149,"column":129,"offset":3427},"indent":[]}},{"type":"inlineCode","value":"theme","position":{"start":{"line":149,"column":129,"offset":3427},"end":{"line":149,"column":136,"offset":3434},"indent":[]}},{"type":"text","value":" object.\nWhen the variant is undefined in the ","position":{"start":{"line":149,"column":136,"offset":3434},"end":{"line":150,"column":38,"offset":3480},"indent":[1]}},{"type":"inlineCode","value":"theme","position":{"start":{"line":150,"column":38,"offset":3480},"end":{"line":150,"column":45,"offset":3487},"indent":[]}},{"type":"text","value":", no additional styles are applied to the element.","position":{"start":{"line":150,"column":45,"offset":3487},"end":{"line":150,"column":95,"offset":3537},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":3299},"end":{"line":150,"column":95,"offset":3537},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Read the ","position":{"start":{"line":152,"column":1,"offset":3539},"end":{"line":152,"column":10,"offset":3548},"indent":[]}},{"type":"link","title":null,"url":"/guides/layouts","children":[{"type":"text","value":"Layouts Guide","position":{"start":{"line":152,"column":11,"offset":3549},"end":{"line":152,"column":24,"offset":3562},"indent":[]}}],"position":{"start":{"line":152,"column":10,"offset":3548},"end":{"line":152,"column":42,"offset":3580},"indent":[]}},{"type":"text","value":" to learn more.","position":{"start":{"line":152,"column":42,"offset":3580},"end":{"line":152,"column":57,"offset":3595},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":3539},"end":{"line":152,"column":57,"offset":3595},"indent":[]}},{"type":"definition","identifier":"styled system css","label":"styled system css","title":null,"url":"https://styled-system.com/css","position":{"start":{"line":154,"column":1,"offset":3597},"end":{"line":154,"column":51,"offset":3647},"indent":[]}},{"type":"definition","identifier":"gatsby themes","label":"gatsby themes","title":null,"url":"https://www.gatsbyjs.org/docs/themes/","position":{"start":{"line":155,"column":1,"offset":3648},"end":{"line":155,"column":55,"offset":3702},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Variants\"}","position":{"start":{"line":158,"column":1,"offset":3705},"end":{"line":158,"column":49,"offset":3753},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":158,"column":49,"offset":3753}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Variants\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Note = makeShortcode(\"Note\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"variants\"\n    }}>{`Variants`}</h1>\n    <p>{`To add groups of styles based on theme values,\nyou can take advantage of the `}<em parentName=\"p\">{`Variants`}</em>{` feature.\nVariants allow you to define the styles used across multiple buttons, typographic elements, or any element in your `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` object.`}</p>\n    <p>{`For example, you can define `}<inlineCode parentName=\"p\">{`primary`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`secondary`}</inlineCode>{` variants for buttons and use colors from the theme.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// example theme with variants\n{\n  colors: {\n    primary: '#07c',\n    secondary: '#639',\n  },\n  buttons: {\n    primary: {\n      color: 'white',\n      bg: 'primary',\n    },\n    secondary: {\n      color: 'white',\n      bg: 'secondary',\n    },\n  },\n}\n`}</code></pre>\n    <p>{`With the `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` object above, the `}<inlineCode parentName=\"p\">{`buttons`}</inlineCode>{` variants can be referenced in the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<button sx={{ variant: 'buttons.primary' }} />\n`}</code></pre>\n    <p>{`When using the built-in `}<a parentName=\"p\" {...{\n        \"href\": \"/components/button\"\n      }}><inlineCode parentName=\"a\">{`Button`}</inlineCode>{` component`}</a>{`, you can set these styles with the `}<inlineCode parentName=\"p\">{`variant`}</inlineCode>{` prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Button variant='secondary' />\n`}</code></pre>\n    <Note mdxType=\"Note\">\n      <p>{`Variants can use any name you choose, and deeply nested objects can be accessed with dot notation.`}</p>\n    </Note>\n    <h2 {...{\n      \"id\": \"color-modes\"\n    }}>{`Color Modes`}</h2>\n    <p>{`Variants will also work with `}<a parentName=\"p\" {...{\n        \"href\": \"/color-modes\"\n      }}>{`color modes`}</a>{`.\nWith the example below, the primary button will adapt its colors based on the current color mode.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// example theme with button variants and color modes\n{\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#0c7',\n    modes: {\n      dark: {\n        text: '#000',\n        background: '#fff',\n        primary: '#0c7',\n      },\n    },\n  },\n  buttons: {\n    primary: {\n      color: 'background', // use the page background color for an inverted effect\n      bg: 'primary',\n    },\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"typography\"\n    }}>{`Typography`}</h2>\n    <p>{`Variants can also be used to create typographic styles,\nsimilar to how graphics applications store text styles.\nThis allows you to define core typographic values and use them as complete styles,\nbut still override individual values when needed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// example theme with typographic variants\n{\n  fonts: {\n    body: 'system-ui, sans-serif',\n    heading: 'Poppins, sans-serif',\n    monospace: 'Menlo, monospace',\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n  fontWeights: {\n    body: 400,\n    heading: 900,\n    bold: 700,\n  },\n  letterSpacings: {\n    heading: '-0.05em',\n    caps: '0.1em',\n  },\n  text: {\n    heading: {\n      fontFamily: 'heading',\n      fontWeight: 'heading',\n      lineHeight: 'heading',\n      letterSpacing: 'heading',\n    },\n    display: {\n      fontFamily: 'heading',\n      fontWeight: 'heading',\n      lineHeight: 'heading',\n      letterSpacing: 'heading',\n      fontSize: [ 5, 6, 7 ],\n    },\n    caps: {\n      textTransform: 'uppercase',\n      letterSpacing: 'caps',\n    },\n  },\n}\n`}</code></pre>\n    <p>{`These variants can then be used in the `}<inlineCode parentName=\"p\">{`theme.styles`}</inlineCode>{` object, with the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop, or with the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/components/text\"\n      }}><inlineCode parentName=\"a\">{`Text`}</inlineCode></a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"/components/heading\"\n      }}><inlineCode parentName=\"a\">{`Heading`}</inlineCode></a>{` components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// example usage of typographic variants\n<h1 sx={{ variant: 'text.display' }} />\n<p sx={{ variant: 'text.caps' }} />\n<h2\n  sx={{\n    variant: 'text.heading',\n    // overriding the default styles\n    fontWeight: 'body',\n  }}\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"themeable-layout-components\"\n    }}>{`Themeable Layout Components`}</h2>\n    <p>{`Variants can also be used to create themeable layout components.\nThis is especially useful when creating `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/docs/themes/\"\n      }}>{`Gatsby themes`}</a>{`,\nwhere you'd like certain parts of your page layout to be customizable.`}</p>\n    <p>{`Using the `}<inlineCode parentName=\"p\">{`variant`}</inlineCode>{` key in the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop allows you to define styles for a component that can optionally be overridden from the `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` object.\nWhen the variant is undefined in the `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{`, no additional styles are applied to the element.`}</p>\n    <p>{`Read the `}<a parentName=\"p\" {...{\n        \"href\": \"/guides/layouts\"\n      }}>{`Layouts Guide`}</a>{` to learn more.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}