{"expireTime":9007200854949531000,"key":"gatsby-plugin-mdx-entire-payload-ac416f9cfdb59ffccfb0130e1aa55db0-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"MDX Layout Components","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":24,"offset":24},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":24,"offset":24},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":4,"column":1,"offset":26},"end":{"line":4,"column":5,"offset":30},"indent":[]}},{"type":"inlineCode","value":"ThemeProvider","position":{"start":{"line":4,"column":5,"offset":30},"end":{"line":4,"column":20,"offset":45},"indent":[]}},{"type":"text","value":" component can be nested within a parent ","position":{"start":{"line":4,"column":20,"offset":45},"end":{"line":4,"column":61,"offset":86},"indent":[]}},{"type":"inlineCode","value":"ThemeProvider","position":{"start":{"line":4,"column":61,"offset":86},"end":{"line":4,"column":76,"offset":101},"indent":[]}},{"type":"text","value":",\nallowing you to contextually adjust styles in certain parts of a UI.\nThis functionality can be leveraged to create custom layout components that\ntake MDX content as children to create uniquely styled blocks of content.\nFor example this site's ","position":{"start":{"line":4,"column":76,"offset":101},"end":{"line":8,"column":25,"offset":346},"indent":[1,1,1,1]}},{"type":"link","title":null,"url":"/","children":[{"type":"text","value":"landing page","position":{"start":{"line":8,"column":26,"offset":347},"end":{"line":8,"column":38,"offset":359},"indent":[]}}],"position":{"start":{"line":8,"column":25,"offset":346},"end":{"line":8,"column":42,"offset":363},"indent":[]}},{"type":"text","value":" uses this approach to style its content,\nwhich is written in MDX.","position":{"start":{"line":8,"column":42,"offset":363},"end":{"line":9,"column":25,"offset":429},"indent":[1]}}],"position":{"start":{"line":4,"column":1,"offset":26},"end":{"line":9,"column":25,"offset":429},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As an example, create a new component with the ","position":{"start":{"line":11,"column":1,"offset":431},"end":{"line":11,"column":48,"offset":478},"indent":[]}},{"type":"inlineCode","value":"ThemeProvider","position":{"start":{"line":11,"column":48,"offset":478},"end":{"line":11,"column":63,"offset":493},"indent":[]}},{"type":"text","value":" and a wrapping ","position":{"start":{"line":11,"column":63,"offset":493},"end":{"line":11,"column":79,"offset":509},"indent":[]}},{"type":"inlineCode","value":"<div>","position":{"start":{"line":11,"column":79,"offset":509},"end":{"line":11,"column":86,"offset":516},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11,"column":86,"offset":516},"end":{"line":11,"column":87,"offset":517},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":431},"end":{"line":11,"column":87,"offset":517},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { jsx, ThemeProvider } from 'theme-ui'\n\nexport default props => (\n  <ThemeProvider theme={{}}>\n    <div {...props} />\n  </ThemeProvider>\n)","position":{"start":{"line":13,"column":1,"offset":519},"end":{"line":22,"column":4,"offset":691},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To add styles to this component, add a ","position":{"start":{"line":24,"column":1,"offset":693},"end":{"line":24,"column":40,"offset":732},"indent":[]}},{"type":"inlineCode","value":"theme","position":{"start":{"line":24,"column":40,"offset":732},"end":{"line":24,"column":47,"offset":739},"indent":[]}},{"type":"text","value":" prop to the ","position":{"start":{"line":24,"column":47,"offset":739},"end":{"line":24,"column":60,"offset":752},"indent":[]}},{"type":"inlineCode","value":"ThemeProvider","position":{"start":{"line":24,"column":60,"offset":752},"end":{"line":24,"column":75,"offset":767},"indent":[]}},{"type":"text","value":" and an ","position":{"start":{"line":24,"column":75,"offset":767},"end":{"line":24,"column":83,"offset":775},"indent":[]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":24,"column":83,"offset":775},"end":{"line":24,"column":87,"offset":779},"indent":[]}},{"type":"text","value":" prop to the ","position":{"start":{"line":24,"column":87,"offset":779},"end":{"line":24,"column":100,"offset":792},"indent":[]}},{"type":"inlineCode","value":"div","position":{"start":{"line":24,"column":100,"offset":792},"end":{"line":24,"column":105,"offset":797},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":24,"column":105,"offset":797},"end":{"line":24,"column":106,"offset":798},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":693},"end":{"line":24,"column":106,"offset":798},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { jsx, ThemeProvider } from 'theme-ui'\n\nexport default props => (\n  <ThemeProvider\n    theme={{\n      styles: {\n        // style child elements\n        h1: {\n          fontSize: [5, 6, 7],\n        },\n      },\n    }}>\n    <div\n      {...props}\n      sx={{\n        // swap colors for an inverted effect\n        color: 'background',\n        bg: 'primary',\n        px: 3,\n        py: 4,\n      }}\n    />\n  </ThemeProvider>\n)","position":{"start":{"line":26,"column":1,"offset":800},"end":{"line":52,"column":4,"offset":1253},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The component above can then be imported and used within an MDX document.","position":{"start":{"line":54,"column":1,"offset":1255},"end":{"line":54,"column":74,"offset":1328},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1255},"end":{"line":54,"column":74,"offset":1328},"indent":[]}},{"type":"code","lang":"md","meta":null,"value":"<!-- example mdx file -->\n\nimport MyLayout from './MyLayout'\n\n<MyLayout>\n\n# Hello\n\nThis section has custom styles\n\n</MyLayout>\n\nThis part of the document uses default styles","position":{"start":{"line":56,"column":1,"offset":1330},"end":{"line":70,"column":4,"offset":1513},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"MDX Layout Components\"}","position":{"start":{"line":73,"column":1,"offset":1516},"end":{"line":73,"column":62,"offset":1577},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":73,"column":62,"offset":1577}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"MDX Layout Components\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"mdx-layout-components\"\n    }}>{`MDX Layout Components`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` component can be nested within a parent `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{`,\nallowing you to contextually adjust styles in certain parts of a UI.\nThis functionality can be leveraged to create custom layout components that\ntake MDX content as children to create uniquely styled blocks of content.\nFor example this site's `}<a parentName=\"p\" {...{\n        \"href\": \"/\"\n      }}>{`landing page`}</a>{` uses this approach to style its content,\nwhich is written in MDX.`}</p>\n    <p>{`As an example, create a new component with the `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` and a wrapping `}<inlineCode parentName=\"p\">{`<div>`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { jsx, ThemeProvider } from 'theme-ui'\n\nexport default props => (\n  <ThemeProvider theme={{}}>\n    <div {...props} />\n  </ThemeProvider>\n)\n`}</code></pre>\n    <p>{`To add styles to this component, add a `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` prop to the `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` and an `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop to the `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { jsx, ThemeProvider } from 'theme-ui'\n\nexport default props => (\n  <ThemeProvider\n    theme={{\n      styles: {\n        // style child elements\n        h1: {\n          fontSize: [5, 6, 7],\n        },\n      },\n    }}>\n    <div\n      {...props}\n      sx={{\n        // swap colors for an inverted effect\n        color: 'background',\n        bg: 'primary',\n        px: 3,\n        py: 4,\n      }}\n    />\n  </ThemeProvider>\n)\n`}</code></pre>\n    <p>{`The component above can then be imported and used within an MDX document.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`<!-- example mdx file -->\n\nimport MyLayout from './MyLayout'\n\n<MyLayout>\n\n# Hello\n\nThis section has custom styles\n\n</MyLayout>\n\nThis part of the document uses default styles\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}