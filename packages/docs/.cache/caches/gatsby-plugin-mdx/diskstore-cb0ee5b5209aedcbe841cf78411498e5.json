{"expireTime":9007200854949531000,"key":"gatsby-plugin-mdx-entire-payload-5b708f4fcb988a78257bbb249cab5905-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Styled Components","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":20,"offset":20},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":20,"offset":20},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you're already using the ","position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":4,"column":29,"offset":50},"indent":[]}},{"type":"inlineCode","value":"styled","position":{"start":{"line":4,"column":29,"offset":50},"end":{"line":4,"column":37,"offset":58},"indent":[]}},{"type":"text","value":" API from the ","position":{"start":{"line":4,"column":37,"offset":58},"end":{"line":4,"column":51,"offset":72},"indent":[]}},{"type":"linkReference","identifier":"@emotion/styled","label":"@emotion/styled","referenceType":"collapsed","children":[{"type":"text","value":"@emotion/styled","position":{"start":{"line":4,"column":52,"offset":73},"end":{"line":4,"column":67,"offset":88},"indent":[]}}],"position":{"start":{"line":4,"column":51,"offset":72},"end":{"line":4,"column":70,"offset":91},"indent":[]}},{"type":"text","value":" package, those components should have access to the same theming context that Theme UI uses.\nInstead of using the ","position":{"start":{"line":4,"column":70,"offset":91},"end":{"line":5,"column":22,"offset":206},"indent":[1]}},{"type":"inlineCode","value":"ThemeProvider","position":{"start":{"line":5,"column":22,"offset":206},"end":{"line":5,"column":37,"offset":221},"indent":[]}},{"type":"text","value":" component from ","position":{"start":{"line":5,"column":37,"offset":221},"end":{"line":5,"column":53,"offset":237},"indent":[]}},{"type":"inlineCode","value":"emotion-theming","position":{"start":{"line":5,"column":53,"offset":237},"end":{"line":5,"column":70,"offset":254},"indent":[]}},{"type":"text","value":", you can import and use the Theme UI provider.","position":{"start":{"line":5,"column":70,"offset":254},"end":{"line":5,"column":117,"offset":301},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":5,"column":117,"offset":301},"indent":[1]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { jsx, ThemeProvider } from 'theme-ui'\nimport theme from './theme'\nimport SomeComponent from './SomeComponent'\n\nexport default props => (\n  <ThemeProvider theme={theme}>\n    <SomeComponent />\n  </ThemeProvider>\n)","position":{"start":{"line":7,"column":1,"offset":303},"end":{"line":18,"column":4,"offset":549},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you're using the ","position":{"start":{"line":20,"column":1,"offset":551},"end":{"line":20,"column":21,"offset":571},"indent":[]}},{"type":"linkReference","identifier":"styled components","label":"Styled Components","referenceType":"collapsed","children":[{"type":"text","value":"Styled Components","position":{"start":{"line":20,"column":22,"offset":572},"end":{"line":20,"column":39,"offset":589},"indent":[]}}],"position":{"start":{"line":20,"column":21,"offset":571},"end":{"line":20,"column":42,"offset":592},"indent":[]}},{"type":"text","value":" library, we're looking into integrations for existing components, but these can usually be converted to use Emotion with a single line change to the ","position":{"start":{"line":20,"column":42,"offset":592},"end":{"line":20,"column":192,"offset":742},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":20,"column":192,"offset":742},"end":{"line":20,"column":200,"offset":750},"indent":[]}},{"type":"text","value":" statement.","position":{"start":{"line":20,"column":200,"offset":750},"end":{"line":20,"column":211,"offset":761},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":551},"end":{"line":20,"column":211,"offset":761},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// before\nimport styled from 'styled-components'","position":{"start":{"line":22,"column":1,"offset":763},"end":{"line":25,"column":4,"offset":821},"indent":[1,1,1]}},{"type":"code","lang":"js","meta":null,"value":"// after\nimport styled from '@emotion/styled'","position":{"start":{"line":27,"column":1,"offset":823},"end":{"line":30,"column":4,"offset":878},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Using the ","position":{"start":{"line":32,"column":4,"offset":883},"end":{"line":32,"column":14,"offset":893},"indent":[]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":32,"column":14,"offset":893},"end":{"line":32,"column":18,"offset":897},"indent":[]}},{"type":"text","value":" prop","position":{"start":{"line":32,"column":18,"offset":897},"end":{"line":32,"column":23,"offset":902},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":880},"end":{"line":32,"column":23,"offset":902},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To avoid the need for an additional dependency,\nyou can use the ","position":{"start":{"line":34,"column":1,"offset":904},"end":{"line":35,"column":17,"offset":968},"indent":[1]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":35,"column":17,"offset":968},"end":{"line":35,"column":21,"offset":972},"indent":[]}},{"type":"text","value":" prop to create custom styled components.","position":{"start":{"line":35,"column":21,"offset":972},"end":{"line":35,"column":62,"offset":1013},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":904},"end":{"line":35,"column":62,"offset":1013},"indent":[1]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { jsx } from 'theme-ui'\n\nexport default ({ width, color, bg, ...props }) => (\n  <div\n    {...props}\n    sx={{\n      width,\n      color,\n      bg,\n      // additional styles...\n    }}\n  />\n)","position":{"start":{"line":37,"column":1,"offset":1015},"end":{"line":52,"column":4,"offset":1238},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"definition","identifier":"@emotion/styled","label":"@emotion/styled","title":null,"url":"https://emotion.sh/docs/styled","position":{"start":{"line":54,"column":1,"offset":1240},"end":{"line":54,"column":50,"offset":1289},"indent":[]}},{"type":"definition","identifier":"styled components","label":"styled components","title":null,"url":"https://styled-components.com","position":{"start":{"line":55,"column":1,"offset":1290},"end":{"line":55,"column":51,"offset":1340},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Styled Components\"}","position":{"start":{"line":58,"column":1,"offset":1343},"end":{"line":58,"column":58,"offset":1400},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":58,"column":58,"offset":1400}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Styled Components\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"styled-components\"\n    }}>{`Styled Components`}</h1>\n    <p>{`If you're already using the `}<inlineCode parentName=\"p\">{`styled`}</inlineCode>{` API from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://emotion.sh/docs/styled\"\n      }}>{`@emotion/styled`}</a>{` package, those components should have access to the same theming context that Theme UI uses.\nInstead of using the `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` component from `}<inlineCode parentName=\"p\">{`emotion-theming`}</inlineCode>{`, you can import and use the Theme UI provider.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { jsx, ThemeProvider } from 'theme-ui'\nimport theme from './theme'\nimport SomeComponent from './SomeComponent'\n\nexport default props => (\n  <ThemeProvider theme={theme}>\n    <SomeComponent />\n  </ThemeProvider>\n)\n`}</code></pre>\n    <p>{`If you're using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://styled-components.com\"\n      }}>{`Styled Components`}</a>{` library, we're looking into integrations for existing components, but these can usually be converted to use Emotion with a single line change to the `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{` statement.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// before\nimport styled from 'styled-components'\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// after\nimport styled from '@emotion/styled'\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-the-sx-prop\"\n    }}>{`Using the `}<inlineCode parentName=\"h2\">{`sx`}</inlineCode>{` prop`}</h2>\n    <p>{`To avoid the need for an additional dependency,\nyou can use the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop to create custom styled components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { jsx } from 'theme-ui'\n\nexport default ({ width, color, bg, ...props }) => (\n  <div\n    {...props}\n    sx={{\n      width,\n      color,\n      bg,\n      // additional styles...\n    }}\n  />\n)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}