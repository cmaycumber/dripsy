{"expireTime":9007200854949531000,"key":"gatsby-plugin-mdx-entire-payload-13c1c786dc3a62b24b67d949f366cb12-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Global Styles","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":16,"offset":16},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the Emotion ","position":{"start":{"line":4,"column":1,"offset":18},"end":{"line":4,"column":17,"offset":34},"indent":[]}},{"type":"inlineCode","value":"Global","position":{"start":{"line":4,"column":17,"offset":34},"end":{"line":4,"column":25,"offset":42},"indent":[]}},{"type":"text","value":" component to add global CSS with theme-based values.","position":{"start":{"line":4,"column":25,"offset":42},"end":{"line":4,"column":78,"offset":95},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":18},"end":{"line":4,"column":78,"offset":95},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"By default, the ","position":{"start":{"line":6,"column":1,"offset":97},"end":{"line":6,"column":17,"offset":113},"indent":[]}},{"type":"inlineCode","value":"ThemeProvider","position":{"start":{"line":6,"column":17,"offset":113},"end":{"line":6,"column":32,"offset":128},"indent":[]}},{"type":"text","value":" component will apply styles in ","position":{"start":{"line":6,"column":32,"offset":128},"end":{"line":6,"column":64,"offset":160},"indent":[]}},{"type":"inlineCode","value":"theme.styles.root","position":{"start":{"line":6,"column":64,"offset":160},"end":{"line":6,"column":83,"offset":179},"indent":[]}},{"type":"text","value":" to the ","position":{"start":{"line":6,"column":83,"offset":179},"end":{"line":6,"column":91,"offset":187},"indent":[]}},{"type":"inlineCode","value":"<body>","position":{"start":{"line":6,"column":91,"offset":187},"end":{"line":6,"column":99,"offset":195},"indent":[]}},{"type":"text","value":" element.\nIt will also apply ","position":{"start":{"line":6,"column":99,"offset":195},"end":{"line":7,"column":20,"offset":224},"indent":[1]}},{"type":"inlineCode","value":"color","position":{"start":{"line":7,"column":20,"offset":224},"end":{"line":7,"column":27,"offset":231},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":7,"column":27,"offset":231},"end":{"line":7,"column":32,"offset":236},"indent":[]}},{"type":"inlineCode","value":"background-color","position":{"start":{"line":7,"column":32,"offset":236},"end":{"line":7,"column":50,"offset":254},"indent":[]}},{"type":"text","value":" styles based on ","position":{"start":{"line":7,"column":50,"offset":254},"end":{"line":7,"column":67,"offset":271},"indent":[]}},{"type":"inlineCode","value":"theme.colors.text","position":{"start":{"line":7,"column":67,"offset":271},"end":{"line":7,"column":86,"offset":290},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":7,"column":86,"offset":290},"end":{"line":7,"column":91,"offset":295},"indent":[]}},{"type":"inlineCode","value":"theme.colors.background","position":{"start":{"line":7,"column":91,"offset":295},"end":{"line":7,"column":116,"offset":320},"indent":[]}},{"type":"text","value":" respectively.","position":{"start":{"line":7,"column":116,"offset":320},"end":{"line":7,"column":130,"offset":334},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":97},"end":{"line":7,"column":130,"offset":334},"indent":[1]}},{"type":"jsx","value":"<Note>\nGenerally, you should try to avoid adding CSS to global scope.\nMany styles can be safely encapsulated into a component without the need for global styles.\n</Note>","position":{"start":{"line":9,"column":1,"offset":336},"end":{"line":12,"column":8,"offset":505},"indent":[1,1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"import React from 'react'\nimport { Global } from '@emotion/core'\n\nexport default props =>\n  <Global\n    styles={theme => ({\n      '*': {\n        boxSizing: 'border-box',\n      }\n    })}\n  />","position":{"start":{"line":14,"column":1,"offset":507},"end":{"line":26,"column":4,"offset":708},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Global Styles\"}","position":{"start":{"line":29,"column":1,"offset":711},"end":{"line":29,"column":54,"offset":764},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":29,"column":54,"offset":764}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Global Styles\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Note = makeShortcode(\"Note\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"global-styles\"\n    }}>{`Global Styles`}</h1>\n    <p>{`Use the Emotion `}<inlineCode parentName=\"p\">{`Global`}</inlineCode>{` component to add global CSS with theme-based values.`}</p>\n    <p>{`By default, the `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` component will apply styles in `}<inlineCode parentName=\"p\">{`theme.styles.root`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`<body>`}</inlineCode>{` element.\nIt will also apply `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`background-color`}</inlineCode>{` styles based on `}<inlineCode parentName=\"p\">{`theme.colors.text`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`theme.colors.background`}</inlineCode>{` respectively.`}</p>\n    <Note mdxType=\"Note\">\nGenerally, you should try to avoid adding CSS to global scope.\nMany styles can be safely encapsulated into a component without the need for global styles.\n    </Note>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react'\nimport { Global } from '@emotion/core'\n\nexport default props =>\n  <Global\n    styles={theme => ({\n      '*': {\n        boxSizing: 'border-box',\n      }\n    })}\n  />\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}