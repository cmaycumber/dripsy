{"expireTime":9007200854949531000,"key":"gatsby-plugin-mdx-entire-payload-f75aca34da0ef05254e7b513df0cf208-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Getting Started","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":18,"offset":18},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":18,"offset":18},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Install Theme UI.","position":{"start":{"line":4,"column":1,"offset":20},"end":{"line":4,"column":18,"offset":37},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":20},"end":{"line":4,"column":18,"offset":37},"indent":[]}},{"type":"code","lang":"sh","meta":null,"value":"npm i theme-ui","position":{"start":{"line":6,"column":1,"offset":39},"end":{"line":8,"column":4,"offset":63},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Create a theme object to include custom color, typography, and layout values.","position":{"start":{"line":10,"column":1,"offset":65},"end":{"line":10,"column":78,"offset":142},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":65},"end":{"line":10,"column":78,"offset":142},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// example theme.js\nexport default {\n  fonts: {\n    body: 'system-ui, sans-serif',\n    heading: '\"Avenir Next\", sans-serif',\n    monospace: 'Menlo, monospace',\n  },\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#33e',\n  },\n}","position":{"start":{"line":12,"column":1,"offset":144},"end":{"line":26,"column":4,"offset":400},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Note>","position":{"start":{"line":28,"column":1,"offset":402},"end":{"line":28,"column":7,"offset":408},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you're using Gatsby, see the ","position":{"start":{"line":30,"column":1,"offset":410},"end":{"line":30,"column":33,"offset":442},"indent":[]}},{"type":"link","title":null,"url":"/getting-started/gatsby","children":[{"type":"text","value":"Getting Started with Gatsby","position":{"start":{"line":30,"column":34,"offset":443},"end":{"line":30,"column":61,"offset":470},"indent":[]}}],"position":{"start":{"line":30,"column":33,"offset":442},"end":{"line":30,"column":87,"offset":496},"indent":[]}},{"type":"text","value":" page.","position":{"start":{"line":30,"column":87,"offset":496},"end":{"line":30,"column":93,"offset":502},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":410},"end":{"line":30,"column":93,"offset":502},"indent":[]}},{"type":"jsx","value":"</Note>","position":{"start":{"line":32,"column":1,"offset":504},"end":{"line":32,"column":8,"offset":511},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add the theme to your application with the ","position":{"start":{"line":34,"column":1,"offset":513},"end":{"line":34,"column":44,"offset":556},"indent":[]}},{"type":"inlineCode","value":"ThemeProvider","position":{"start":{"line":34,"column":44,"offset":556},"end":{"line":34,"column":59,"offset":571},"indent":[]}},{"type":"text","value":", passing in the ","position":{"start":{"line":34,"column":59,"offset":571},"end":{"line":34,"column":76,"offset":588},"indent":[]}},{"type":"inlineCode","value":"theme","position":{"start":{"line":34,"column":76,"offset":588},"end":{"line":34,"column":83,"offset":595},"indent":[]}},{"type":"text","value":" object as a prop.","position":{"start":{"line":34,"column":83,"offset":595},"end":{"line":34,"column":101,"offset":613},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":513},"end":{"line":34,"column":101,"offset":613},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"// basic usage\nimport React from 'react'\nimport { ThemeProvider } from 'theme-ui'\nimport theme from './theme'\n\nexport default props => (\n  <ThemeProvider theme={theme}>{props.children}</ThemeProvider>\n)","position":{"start":{"line":36,"column":1,"offset":615},"end":{"line":45,"column":4,"offset":828},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"sx","position":{"start":{"line":47,"column":4,"offset":833},"end":{"line":47,"column":8,"offset":837},"indent":[]}},{"type":"text","value":" prop","position":{"start":{"line":47,"column":8,"offset":837},"end":{"line":47,"column":13,"offset":842},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":830},"end":{"line":47,"column":13,"offset":842},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":49,"column":1,"offset":844},"end":{"line":49,"column":9,"offset":852},"indent":[]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":49,"column":9,"offset":852},"end":{"line":49,"column":13,"offset":856},"indent":[]}},{"type":"text","value":" prop throughout your application to add styles based on your theme to any component.\nEnable the ","position":{"start":{"line":49,"column":13,"offset":856},"end":{"line":50,"column":12,"offset":953},"indent":[1]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":50,"column":12,"offset":953},"end":{"line":50,"column":16,"offset":957},"indent":[]}},{"type":"text","value":" prop by adding the ","position":{"start":{"line":50,"column":16,"offset":957},"end":{"line":50,"column":36,"offset":977},"indent":[]}},{"type":"inlineCode","value":"/** @jsx jsx */","position":{"start":{"line":50,"column":36,"offset":977},"end":{"line":50,"column":53,"offset":994},"indent":[]}},{"type":"text","value":" comment to the top of your file and importing ","position":{"start":{"line":50,"column":53,"offset":994},"end":{"line":50,"column":100,"offset":1041},"indent":[]}},{"type":"inlineCode","value":"jsx","position":{"start":{"line":50,"column":100,"offset":1041},"end":{"line":50,"column":105,"offset":1046},"indent":[]}},{"type":"text","value":" from Theme UI.","position":{"start":{"line":50,"column":105,"offset":1046},"end":{"line":50,"column":120,"offset":1061},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":844},"end":{"line":50,"column":120,"offset":1061},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":52,"column":1,"offset":1063},"end":{"line":52,"column":5,"offset":1067},"indent":[]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":52,"column":5,"offset":1067},"end":{"line":52,"column":9,"offset":1071},"indent":[]}},{"type":"text","value":" prop lets you add any valid CSS to an element,\nwhile using values from your theme to keep styles consistent.\nYou can think of the style object that the ","position":{"start":{"line":52,"column":9,"offset":1071},"end":{"line":54,"column":44,"offset":1224},"indent":[1,1]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":54,"column":44,"offset":1224},"end":{"line":54,"column":48,"offset":1228},"indent":[]}},{"type":"text","value":" prop accepts as a ","position":{"start":{"line":54,"column":48,"offset":1228},"end":{"line":54,"column":67,"offset":1247},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"superset","position":{"start":{"line":54,"column":68,"offset":1248},"end":{"line":54,"column":76,"offset":1256},"indent":[]}}],"position":{"start":{"line":54,"column":67,"offset":1247},"end":{"line":54,"column":77,"offset":1257},"indent":[]}},{"type":"text","value":" of CSS.","position":{"start":{"line":54,"column":77,"offset":1257},"end":{"line":54,"column":85,"offset":1265},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1063},"end":{"line":54,"column":85,"offset":1265},"indent":[1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { jsx } from 'theme-ui'\n\nexport default props => (\n  <div\n    sx={{\n      fontWeight: 'bold',\n      fontSize: 4, // picks up value from `theme.fontSizes[4]`\n      color: 'primary', // picks up value from `theme.colors.primary`\n    }}>\n    Hello\n  </div>\n)","position":{"start":{"line":57,"column":1,"offset":1268},"end":{"line":71,"column":4,"offset":1557},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Responsive styles","position":{"start":{"line":73,"column":4,"offset":1562},"end":{"line":73,"column":21,"offset":1579},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1559},"end":{"line":73,"column":21,"offset":1579},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":75,"column":1,"offset":1581},"end":{"line":75,"column":5,"offset":1585},"indent":[]}},{"type":"inlineCode","value":"sx","position":{"start":{"line":75,"column":5,"offset":1585},"end":{"line":75,"column":9,"offset":1589},"indent":[]}},{"type":"text","value":" prop also supports using arrays as values to change properties responsively with a mobile-first approach.","position":{"start":{"line":75,"column":9,"offset":1589},"end":{"line":75,"column":115,"offset":1695},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1581},"end":{"line":75,"column":115,"offset":1695},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { jsx } from 'theme-ui'\n\nexport default props => (\n  <div\n    sx={{\n      // applies width 100% to all viewport widths,\n      // width 50% above the first breakpoint,\n      // and 25% above the next breakpoint\n      width: ['100%', '50%', '25%'],\n    }}\n  />\n)","position":{"start":{"line":77,"column":1,"offset":1697},"end":{"line":91,"column":4,"offset":1991},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Note>","position":{"start":{"line":93,"column":1,"offset":1993},"end":{"line":93,"column":7,"offset":1999},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This API originated in ","position":{"start":{"line":95,"column":1,"offset":2001},"end":{"line":95,"column":24,"offset":2024},"indent":[]}},{"type":"linkReference","identifier":"styled system","label":"Styled System","referenceType":"collapsed","children":[{"type":"text","value":"Styled System","position":{"start":{"line":95,"column":25,"offset":2025},"end":{"line":95,"column":38,"offset":2038},"indent":[]}}],"position":{"start":{"line":95,"column":24,"offset":2024},"end":{"line":95,"column":41,"offset":2041},"indent":[]}},{"type":"text","value":" and is intended as ","position":{"start":{"line":95,"column":41,"offset":2041},"end":{"line":95,"column":61,"offset":2061},"indent":[]}},{"type":"link","title":null,"url":"https://styled-system.com/guides/array-props","children":[{"type":"text","value":"a terser syntax for applying responsive styles","position":{"start":{"line":95,"column":62,"offset":2062},"end":{"line":95,"column":108,"offset":2108},"indent":[]}}],"position":{"start":{"line":95,"column":61,"offset":2061},"end":{"line":95,"column":155,"offset":2155},"indent":[]}},{"type":"text","value":" across a singular dimension.\nThe values used for media queries can be defined in a ","position":{"start":{"line":95,"column":155,"offset":2155},"end":{"line":96,"column":55,"offset":2239},"indent":[1]}},{"type":"link","title":null,"url":"/theming/#breakpoints","children":[{"type":"inlineCode","value":"theme.breakpoints","position":{"start":{"line":96,"column":56,"offset":2240},"end":{"line":96,"column":75,"offset":2259},"indent":[]}}],"position":{"start":{"line":96,"column":55,"offset":2239},"end":{"line":96,"column":99,"offset":2283},"indent":[]}},{"type":"text","value":" array.","position":{"start":{"line":96,"column":99,"offset":2283},"end":{"line":96,"column":106,"offset":2290},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":2001},"end":{"line":96,"column":106,"offset":2290},"indent":[1]}},{"type":"jsx","value":"</Note>","position":{"start":{"line":98,"column":1,"offset":2292},"end":{"line":98,"column":8,"offset":2299},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you prefer standard CSS syntax, you can use nested objects for responsive styles as well.","position":{"start":{"line":100,"column":1,"offset":2301},"end":{"line":100,"column":93,"offset":2393},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":2301},"end":{"line":100,"column":93,"offset":2393},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"<div\n  sx={{\n    width: '100%',\n    '@media screen and (min-width: 40em)': {\n      width: '50%',\n    }\n  }}\n/>","position":{"start":{"line":102,"column":1,"offset":2395},"end":{"line":111,"column":4,"offset":2516},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Components","position":{"start":{"line":113,"column":4,"offset":2521},"end":{"line":113,"column":14,"offset":2531},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":2518},"end":{"line":113,"column":14,"offset":2531},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Theme UI includes a library of primitive UI components, which can be completely customized with your theme and include support for ","position":{"start":{"line":115,"column":1,"offset":2533},"end":{"line":115,"column":132,"offset":2664},"indent":[]}},{"type":"link","title":null,"url":"/components/variants","children":[{"type":"text","value":"variants","position":{"start":{"line":115,"column":133,"offset":2665},"end":{"line":115,"column":141,"offset":2673},"indent":[]}}],"position":{"start":{"line":115,"column":132,"offset":2664},"end":{"line":115,"column":164,"offset":2696},"indent":[]}},{"type":"text","value":".\nYou can use variants to encapsulate more complex, component-specific styles that can be changed with props.\nImport and use these components to handle layout, images, forms, and more.","position":{"start":{"line":115,"column":164,"offset":2696},"end":{"line":117,"column":75,"offset":2880},"indent":[1,1]}}],"position":{"start":{"line":115,"column":1,"offset":2533},"end":{"line":117,"column":75,"offset":2880},"indent":[1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport {\n  jsx,\n  Box,\n  Label,\n  Input,\n  Button,\n} from 'theme-ui'\n\nexport default props =>\n  <Box sx={{ mb: 4 }}>\n    <Label htmlFor='search'>\n      Search\n    </Label>\n    <Input\n      id='search'\n      name='search'\n      {...props}\n    />\n    <Button>\n      Go\n    </Button>\n  </Box>","position":{"start":{"line":119,"column":1,"offset":2882},"end":{"line":143,"column":4,"offset":3198},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"See the ","position":{"start":{"line":145,"column":1,"offset":3200},"end":{"line":145,"column":9,"offset":3208},"indent":[]}},{"type":"link","title":null,"url":"/components","children":[{"type":"text","value":"Components","position":{"start":{"line":145,"column":10,"offset":3209},"end":{"line":145,"column":20,"offset":3219},"indent":[]}}],"position":{"start":{"line":145,"column":9,"offset":3208},"end":{"line":145,"column":34,"offset":3233},"indent":[]}},{"type":"text","value":" documentation for more.","position":{"start":{"line":145,"column":34,"offset":3233},"end":{"line":145,"column":58,"offset":3257},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":3200},"end":{"line":145,"column":58,"offset":3257},"indent":[]}},{"type":"definition","identifier":"styled system","label":"styled system","title":null,"url":"https://styled-system.com","position":{"start":{"line":147,"column":1,"offset":3259},"end":{"line":147,"column":43,"offset":3301},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Getting Started\"}","position":{"start":{"line":150,"column":1,"offset":3304},"end":{"line":150,"column":56,"offset":3359},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":150,"column":56,"offset":3359}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Getting Started\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Note = makeShortcode(\"Note\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h1>\n    <p>{`Install Theme UI.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`npm i theme-ui\n`}</code></pre>\n    <p>{`Create a theme object to include custom color, typography, and layout values.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// example theme.js\nexport default {\n  fonts: {\n    body: 'system-ui, sans-serif',\n    heading: '\"Avenir Next\", sans-serif',\n    monospace: 'Menlo, monospace',\n  },\n  colors: {\n    text: '#000',\n    background: '#fff',\n    primary: '#33e',\n  },\n}\n`}</code></pre>\n    <Note mdxType=\"Note\">\n      <p>{`If you're using Gatsby, see the `}<a parentName=\"p\" {...{\n          \"href\": \"/getting-started/gatsby\"\n        }}>{`Getting Started with Gatsby`}</a>{` page.`}</p>\n    </Note>\n    <p>{`Add the theme to your application with the `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{`, passing in the `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` object as a prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// basic usage\nimport React from 'react'\nimport { ThemeProvider } from 'theme-ui'\nimport theme from './theme'\n\nexport default props => (\n  <ThemeProvider theme={theme}>{props.children}</ThemeProvider>\n)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"sx-prop\"\n    }}><inlineCode parentName=\"h2\">{`sx`}</inlineCode>{` prop`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop throughout your application to add styles based on your theme to any component.\nEnable the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop by adding the `}<inlineCode parentName=\"p\">{`/** @jsx jsx */`}</inlineCode>{` comment to the top of your file and importing `}<inlineCode parentName=\"p\">{`jsx`}</inlineCode>{` from Theme UI.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop lets you add any valid CSS to an element,\nwhile using values from your theme to keep styles consistent.\nYou can think of the style object that the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop accepts as a `}<em parentName=\"p\">{`superset`}</em>{` of CSS.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { jsx } from 'theme-ui'\n\nexport default props => (\n  <div\n    sx={{\n      fontWeight: 'bold',\n      fontSize: 4, // picks up value from \\`theme.fontSizes[4]\\`\n      color: 'primary', // picks up value from \\`theme.colors.primary\\`\n    }}>\n    Hello\n  </div>\n)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"responsive-styles\"\n    }}>{`Responsive styles`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop also supports using arrays as values to change properties responsively with a mobile-first approach.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { jsx } from 'theme-ui'\n\nexport default props => (\n  <div\n    sx={{\n      // applies width 100% to all viewport widths,\n      // width 50% above the first breakpoint,\n      // and 25% above the next breakpoint\n      width: ['100%', '50%', '25%'],\n    }}\n  />\n)\n`}</code></pre>\n    <Note mdxType=\"Note\">\n      <p>{`This API originated in `}<a parentName=\"p\" {...{\n          \"href\": \"https://styled-system.com\"\n        }}>{`Styled System`}</a>{` and is intended as `}<a parentName=\"p\" {...{\n          \"href\": \"https://styled-system.com/guides/array-props\"\n        }}>{`a terser syntax for applying responsive styles`}</a>{` across a singular dimension.\nThe values used for media queries can be defined in a `}<a parentName=\"p\" {...{\n          \"href\": \"/theming/#breakpoints\"\n        }}><inlineCode parentName=\"a\">{`theme.breakpoints`}</inlineCode></a>{` array.`}</p>\n    </Note>\n    <p>{`If you prefer standard CSS syntax, you can use nested objects for responsive styles as well.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<div\n  sx={{\n    width: '100%',\n    '@media screen and (min-width: 40em)': {\n      width: '50%',\n    }\n  }}\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <p>{`Theme UI includes a library of primitive UI components, which can be completely customized with your theme and include support for `}<a parentName=\"p\" {...{\n        \"href\": \"/components/variants\"\n      }}>{`variants`}</a>{`.\nYou can use variants to encapsulate more complex, component-specific styles that can be changed with props.\nImport and use these components to handle layout, images, forms, and more.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport {\n  jsx,\n  Box,\n  Label,\n  Input,\n  Button,\n} from 'theme-ui'\n\nexport default props =>\n  <Box sx={{ mb: 4 }}>\n    <Label htmlFor='search'>\n      Search\n    </Label>\n    <Input\n      id='search'\n      name='search'\n      {...props}\n    />\n    <Button>\n      Go\n    </Button>\n  </Box>\n`}</code></pre>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"/components\"\n      }}>{`Components`}</a>{` documentation for more.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}